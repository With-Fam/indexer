name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - main
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            echo "Connected to Droplet"
            # Create app directory if it doesn't exist
            mkdir -p ~/indexer
            cd ~/indexer

            # Initialize git repository if it doesn't exist
            if [ ! -d .git ]; then
              git init
              git remote add origin https://github.com/With-Fam/indexer.git
            fi

            # Fetch latest code and handle local changes
            git fetch --all
            git checkout -B ${{ github.ref_name }} origin/${{ github.ref_name }}
            git reset HEAD --hard
            git pull origin ${{ github.ref_name }}

            echo "Current branch:"
            git branch --show-current
            echo "Git status:"
            git status

            # Ensure correct Node.js version and environment
            source ~/.nvm/nvm.sh
            nvm use 20

            # Ensure Bun is installed and in PATH
            source ~/.bashrc
            if ! command -v bun &> /dev/null; then
              curl -fsSL https://bun.sh/install | bash
              source ~/.bashrc
            fi

            # Install dependencies using Bun
            bun install

            # Create PM2 ecosystem file if it doesn't exist
            if [ ! -f ecosystem.config.cjs ]; then
              echo "module.exports = {
                apps: [{
                  name: 'indexer',
                  script: 'bun',
                  args: 'start',
                  watch: false,
                  env: {
                    NODE_ENV: 'production'
                  }
                }]
              }" > ecosystem.config.cjs
            fi

            # Ensure PM2 is installed
            npm install -g pm2

            # Start/Restart the application
            pm2 restart ecosystem.config.cjs --update-env
